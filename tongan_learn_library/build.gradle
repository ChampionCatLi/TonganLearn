apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.tongan.study'
version = '1.1.2'

static def getProductName() {
    return "tongan-lms-h5-sdk"
}


android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 2
        versionName "1.1.2"
        consumerProguardFiles 'proguard-rules.pro'
    }
    android.libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = getProductName() + "_${defaultConfig.versionName}" + '.aar'
        }
    }

    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation 'androidx.appcompat:appcompat:1.1.0'
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    bintray {
        user = properties.getProperty("bintray.user")
        key = properties.getProperty("bintray.apikey")

        pkg {
            repo = 'tongan.study'
            name = 'learnLib'

            version {
                name = '1.1.2'
                desc = "通安 sdk"
                vcsTag = '1.1.2'
            }

            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/lcupup/TonganLearn.git'
            websiteUrl = 'https://github.com/lcupup/TonganLearn'
        }

        configurations = ['archives']

    }


    task generateSourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier 'sources'
    }

    task generateJavadocs(type: Javadoc) {
        options.encoding "UTF-8"
        options.charSet 'UTF-8'
        failOnError false
        source = android.sourceSets.main.java.srcDirs //source指定了源码位置
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

//这里dependsOn意为仅当generateJavadocs完成后才开始本task，和ant脚本也是对应的。
    task generateJavadocsJar(type: Jar, dependsOn: generateJavadocs) {
        from generateJavadocs.destinationDir
        classifier 'javadoc'
    }
    artifacts {
        archives generateJavadocsJar
        archives generateSourcesJar
    }
}


